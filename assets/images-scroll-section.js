"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,_toPropertyKey(n.key),n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_setPrototypeOf(e,t)}function _createSuper(r){var n=_isNativeReflectConstruct();return function(){var e,t=_getPrototypeOf(r);return _possibleConstructorReturn(this,n?(e=_getPrototypeOf(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments))}}function _possibleConstructorReturn(e,t){if(t&&("object"===_typeof(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(e)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _wrapNativeSuper(e){var r="function"==typeof Map?new Map:void 0;return(_wrapNativeSuper=function(e){if(null===e||!_isNativeFunction(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(e))return r.get(e);r.set(e,t)}function t(){return _construct(e,arguments,_getPrototypeOf(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(t,e)})(e)}function _construct(e,t,r){return(_construct=_isNativeReflectConstruct()?Reflect.construct.bind():function(e,t,r){var n=[null];n.push.apply(n,t);t=new(Function.bind.apply(e,n));return r&&_setPrototypeOf(t,r.prototype),t}).apply(null,arguments)}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function _isNativeFunction(e){return-1!==Function.toString.call(e).indexOf("[native code]")}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _defineProperty(e,t,r){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0===r)return("string"===t?String:Number)(e);r=r.call(e,t||"default");if("object"!==_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}!function n(o,i,s){function c(t,e){if(!i[t]){if(!o[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(a)return a(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}r=i[t]={exports:{}},o[t][0].call(r.exports,function(e){return c(o[t][1][e]||e)},r,r.exports,n,o,i,s)}return i[t].exports}for(var a="function"==typeof require&&require,e=0;e<s.length;e++)c(s[e]);return c}({1:[function(e,t,r){customElements.get("s-images-scroll")||customElements.define("s-images-scroll",function(){_inherits(r,_wrapNativeSuper(HTMLElement));var t=_createSuper(r);function r(){var e;return _classCallCheck(this,r),_defineProperty(_assertThisInitialized(e=t.call(this)),"elemContainer",e.querySelector(".s-images-scroll__container")),_defineProperty(_assertThisInitialized(e),"elemRow",e.querySelector(".s-images-scroll__row")),_defineProperty(_assertThisInitialized(e),"elemWrapperImages",e.querySelector(".s-images-scroll__images")),_defineProperty(_assertThisInitialized(e),"screenHeight",window.screen.availHeight),_defineProperty(_assertThisInitialized(e),"containerHeight",e.elemContainer.offsetHeight),_defineProperty(_assertThisInitialized(e),"rowHeight",.8*e.screenHeight),_defineProperty(_assertThisInitialized(e),"containerTopPosition",(e.screenHeight-e.rowHeight)/4),_defineProperty(_assertThisInitialized(e),"containerBottomPosition",e.containerHeight-e.rowHeight),e}return _createClass(r,[{key:"connectedCallback",value:function(){this.addStyles(),this.scrollEvent()}},{key:"addStyles",value:function(){this.elemContainer.style.height=this.containerHeight+"px",this.elemRow.style.height=this.rowHeight+"px",this.elemRow.style.top=this.containerTopPosition+"px"}},{key:"toggleFixedSection",value:function(){this.elemContainer.getBoundingClientRect().y<this.containerTopPosition?this.elemRow.classList.add("active"):this.elemRow.classList.remove("active"),this.elemContainer.getBoundingClientRect().y<-this.containerBottomPosition?(this.elemRow.classList.add("active--bottom"),this.elemRow.style.transform="translateY("+(this.containerHeight-this.rowHeight+50)+"px)"):(this.elemRow.classList.remove("active--bottom"),this.elemRow.style.transform="translateY(0px)")}},{key:"translateImages",value:function(){this.elemContainer.getBoundingClientRect().y<0&&this.elemContainer.getBoundingClientRect().y>-(this.containerHeight-this.rowHeight)&&(this.elemWrapperImages.style.transform="translateY("+this.elemContainer.getBoundingClientRect().y+"px)")}},{key:"scrollEvent",value:function(){var e=this;window.addEventListener("scroll",function(){return e.toggleFixedSection(),e.translateImages()})}}]),r}())},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
